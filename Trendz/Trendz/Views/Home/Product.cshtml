@model ProductInfoModel
@inject IProductService productService
@inject IRatingService ratingService
@inject IReviewService reviewService
@inject ISizeService sizeService
@inject IBrandService brandService
@inject IColorService colorService

<section class="product-container">
    <div class="product-images-container">
        @{
            var images = await productService.GetAllImagesForProductAsync(Model.Id);
                    <ul>
                        @{
                    foreach(var image in images)
                    {
                        <li>
                            <img class="selecting-img" src="data:image/png;base64,@image.Image" 
                                onmouseover="selectingImgMouseOverHandler(this)"
                                onmouseout="selectingImgMouseOutHandler(this)" />
                        </li>
                    }
                        }
                    </ul>
                   <img class="main-img" src="" />            
        }
    </div>
    <div class="product-description-container">
        <h4>@Model.Name</h4>
        <div class="product-rating-stars">
            <ul>
                @{
                    var averageRating = await ratingService.GetAverageRatingAboutProductAsync(Model.Id);
                    var reviewsCount = await reviewService.GetReviewsForProductCountAsync(Model.Id);

                    for (int i = 1; i <= 5; i++)
                    {
                        if (i <= averageRating)
                        {
                            <li>
                                <p><i class="fa-solid fa-star" style="color: #FFD43B;"></i></p>
                            </li>
                        }
                        else if (i - 1 > averageRating)
                        {
                            <li>
                                <p><i class="fa-regular fa-star" style="color: #FFD43B;"></i></p>
                            </li>
                        }
                        else
                        {
                            <li>
                                <p><i class="fa-solid fa-star-half-stroke" style="color: #FFD43B;"></i></p>
                            </li>
                        }
                    }
                    <li>
                        <p>(@reviewsCount Reviews)</p>
                    </li>
                }                
            </ul>
        </div>
        <div class="product-price">
            <h2>@Model.Price</h2>
        </div>
        <div class="product-colors">
            <p>Color</p>
            <ul>
                @{
                    var colors = await productService.GetAllColorsForProductAsync(Model.Id);
                    foreach (var item in colors)
                    {
                        var color = await colorService.GetByIdAsync(item.ColorId);   
                        <li>
                            <button class="product-color-btn">@color.Name</button>
                        </li>
                    }
                }
            </ul>
        </div>
        <div class="product-sizes">
            <p>Size</p>
            <ul>
                @{
                    var sizes = await productService.GetAllSizesForProductAsync(Model.Id);
                    foreach (var item in sizes)
                    {
                        var size = await sizeService.GetByIdAsync(item.SizeId);
                        <li>
                            <button class="product-size-btn">@size.Name</button>                            
                        </li>
                    }
                }
            </ul>
        </div>        
        <div class="product-buttons">
            <button>Add to cart</button>
            <button><i class="fa-regular fa-heart" style="color: #000"></i></button>
        </div>
        <div class="product-acc-section">
            <button class="acc">Description</button>
            <div class="panel">
              <p>@Model.Description</p>
            </div>

            <button class="acc">About Store</button>
            <div class="panel">
                @{
                    var brand = await brandService.GetByIdAsync(Model.BrandId);
                    <p>@brand.Name</p>
                    <a asp-controller="Brand" asp-action="Home" asp-route-id="@brand.Id">View More</a>
                }
            </div>
        </div>
    </div>
</section>
<section class="product-reviews-container">
    <h3>Customer Reviews</h3>
    <div class="product-rating">
        @{
            <p>@averageRating</p>
            <ul>                
                @{
            for (int i = 1; i <= 5; i++)
            {
                if (i <= averageRating)
                {
                    <li>
                        <p><i class="fa-solid fa-star" style="color: #FFD43B;"></i></p>
                    </li>
                }
                else if (i - 1 > averageRating)
                {
                    <li>
                        <p><i class="fa-regular fa-star" style="color: #FFD43B;"></i></p>
                    </li>
                }
                else
                {
                    <li>
                        <p><i class="fa-solid fa-star-half-stroke" style="color: #FFD43B;"></i></p>
                    </li>
                }
            }
                    }
            </ul>
            }               
    </div>
</section>

<script>
    function accBtnsHandler(){
        var acc = document.getElementsByClassName("acc");
        var i;

        for (i = 0; i < acc.length; i++) {
          acc[i].addEventListener("click", function() {
            this.classList.toggle("active");

            var panel = this.nextElementSibling;
            if (panel.style.display === "block") {
              panel.style.display = "none";
            } else {
              panel.style.display = "block";
            }
          });
        }
    }
    
    function selectingImgMouseOverHandler(element) { 
        const mainImgEl = document.querySelector('.main-img');
        mainImgEl.src = element.src;
        element.style.border = '1px solid #000';
    }

    function selectingImgMouseOutHandler(element) {
        element.style.border = 'none';
    }

    accBtnsHandler();
</script>
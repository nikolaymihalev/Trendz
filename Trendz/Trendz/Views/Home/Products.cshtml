@model ProductQueryModel
@{
    ViewData["Title"] = "Products";
}

<div class="products-page-container">
    <ul>
    @{
        foreach (var product in Model.Products)
        {
            <li>
                <partial name="_ProductPartial" model="@product" />
            </li>
        }
    }
    </ul>
</div>


<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                @{
                    int previousPage = Model.CurrentPage - 1;
                }
                <a class="page-link"
                   asp-controller="Home"
                   asp-action="Products"
                   asp-route-currentPage="@previousPage"
                   asp-route-sorting="@Model.Sorting"
                   asp-route-category="@Model.Category">Previous</a>
            </li>
        }
        @for (int i = 1; i <= Model.PagesCount; i++)
        {
            <li class="page-item">
                <a class="page-link"
                   asp-controller="Home"
                   asp-action="Products"
                   asp-route-currentPage="@i"
                   asp-route-sorting="@Model.Sorting"
                   asp-route-category="@Model.Category">
                    @i
                </a>
            </li>
        }
        @if (Model.CurrentPage < Model.PagesCount)
        {
            <li class="page-item">
                @{
                    int nextPage = Model.CurrentPage + 1;
                }
                <a class="page-link"
                   asp-controller="Home"
                   asp-action="Products"
                   asp-route-currentPage="@nextPage"
                   asp-route-sorting="@Model.Sorting"
                   asp-route-category="@Model.Category">
                    Next
                </a>
            </li>
        }
    </ul>
</nav>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}